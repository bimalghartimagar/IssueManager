@page "/ticket/create"
@using Domain.Model
@using IssueManager.Client.Blazor.Server.Components.Icons
@using ThirdParty.Api.Interface
@using Util
@inject ITicketService TicketService
@inject NavigationManager nvm

<div v-if="ticket" class="rounded shadow mt-8 pb-1 border border-indigo-400">
    <div class="w-full text-left p-4 text-xl bg-indigo-400 shadow">Create a new ticket</div>
    <div class="m-4 p-2 rounded shadow text-left border border-gray-400">
        <div class="text-xl font-bold">Title:</div>
        <div class="p-4 font-semibold text-xl bg-gray-400">
            <input @bind="ticket.Title" @bind:event="oninput" class="p-2 w-full rounded border border-black" />
        </div>
        <div class="p-4 m-4">
            <div class="text-xl font-bold">Description:</div>
            <textarea @bind="ticket.Description" @bind:event="oninput"
                class="w-full h-60 p-1 rounded border border-black"></textarea>
        </div>
        <div class="flex flex-row p-4 m-4">
            <div class="mr-1">Status:</div>
            <select @bind="status.Name" @bind:event="onchange"
                class="p-1 rounded border border-black">
                @foreach (var item in StatusList)
                {
                    <option value="@item.ToLower()" class="@Utility.GetStatusColor(item.ToLower())">@item</option>
                }
            </select>
        </div>
        <div class="text-left p-4 m-4">
            <button @onclick="CreateTicket"
                class="flex flex-row items-center rounded px-2 py-1 hover:bg-white shadow-none bg-indigo-500 text-white hover:text-indigo-500 @(IsAdding ? "disabled:opacity-50 cursor-not-allowed" : "")"
                disabled="@IsAdding">
                <svg style="@(IsAdding?" display: block":"display: none")"
                    class="animate-spin mr-1 h-5 w-5 hover:text-white" xmlns="http://www.w3.org/2000/svg" fill="none"
                    viewBox="0 0 24 24">
                    <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4" />
                    <path class="opacity-75" fill="currentColor"
                        d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z" />
                </svg>
                <span style="@(!IsAdding?" display: block":"display: none")" class="mr-1">
                    <PlusCircleIcon />
                </span>
                <span>Create</span>
            </button>
            <span class="text-white mr-2 text-lg @ResponseMessageClasses">@ResponseMessage</span>
            <span style="@(IsAdded?"display: block":"display: none")">
                <span @onclick="GotoTicket" class="underline text-indigo-500 cursor-pointer text-lg">Click here</span>
                to
                open the ticket
            </span>
        </div>
    </div>
</div>

@code {
    public int Id { get; set; }
    public Ticket ticket { get; set; } = new Ticket();
    public Status status { get; set; } = new Status();
    public string ResponseMessage { get; set; }
    public bool IsAdding { get; set; }
    public bool IsAdded { get; set; }
    public string ResponseMessageClasses { get; set; }

    public List<string> StatusList { get; set; } = new List<string>()
{
"Open", "Assigned", "Closed"
};

    public bool IsFormValid()
    {
        return ticket.Title.Trim().Length != 0 && ticket.Description.Trim().Length != 0;

    }

    public async void CreateTicket()
    {
        if (!IsFormValid())
        {
            ResponseMessage = "Please fill all the details";
            ResponseMessageClasses = "text-red-500";
        }
        else
        {
            IsAdding = true;
            IsAdded = false;
            try
            {
                ticket.CreatedAt = DateTime.Now;
                ticket.Status = status;
                Console.WriteLine("try");
                ticket = await TicketService.CreateTicket(ticket);
                Id = ticket.Id;
                ticket = new Ticket();
                ResponseMessage = "New ticket created";
                ResponseMessageClasses = "text-green-500";
                IsAdded = true;

            }
            catch (Exception ex)
            {
                Console.WriteLine("catch");
                Console.WriteLine(ex);
                ResponseMessage = "Error while creating ticket";
                ResponseMessageClasses = "text-red-500";
            }
            finally
            {
                Console.WriteLine("finally");
                IsAdding = false;
                StateHasChanged();
            }
        }
    }

    public void GotoTicket()
    {
        nvm.NavigateTo($"/ticket/{Id}");
    }
}